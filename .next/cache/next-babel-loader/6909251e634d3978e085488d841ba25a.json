{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kellvembarobsa/projetos/zapaudios/site/contexts/theme.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport { useTheme } from \"../hooks/themeHooks\";\n\nfunction ThemeRecoilProvider({\n  children\n}) {\n  const {\n    isDarkMode,\n    changeMode\n  } = useTheme();\n  const {\n    0: monted,\n    1: setMonted\n  } = useState(false);\n  useEffect(() => {\n    const themeLocalID = localStorage.getItem('DARK_MODE');\n    console.log(\"themeLocalID: ==>\", themeLocalID);\n    changeMode(themeLocalID === 'true');\n    setMonted(true);\n  }, []);\n\n  if (!monted) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: themes[themeId],\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\nexport default ThemeRecoilProvider;","map":{"version":3,"sources":["/Users/kellvembarobsa/projetos/zapaudios/site/contexts/theme.tsx"],"names":["React","useEffect","useState","ThemeProvider","useTheme","ThemeRecoilProvider","children","isDarkMode","changeMode","monted","setMonted","themeLocalID","localStorage","getItem","console","log","themes","themeId"],"mappings":";;AAAA,OAAOA,KAAP,IAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AAEA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,QAAT,QAAyB,qBAAzB;;AAGA,SAASC,mBAAT,CAA6B;AAAEC,EAAAA;AAAF,CAA7B,EAA2C;AACvC,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA6BJ,QAAQ,EAA3C;AACA,QAAM;AAAA,OAACK,MAAD;AAAA,OAASC;AAAT,MAAsBR,QAAQ,CAAC,KAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAArB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAkCJ,YAAlC;AACAH,IAAAA,UAAU,CAACG,YAAY,KAAK,MAAlB,CAAV;AACAD,IAAAA,SAAS,CAAC,IAAD,CAAT;AACH,GALQ,EAKN,EALM,CAAT;;AAOA,MAAG,CAACD,MAAJ,EAAW;AACP,wBAAO;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBACI,QAAC,aAAD;AAAe,IAAA,KAAK,EAAEO,MAAM,CAACC,OAAD,CAA5B;AAAA,cACMX;AADN;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;AAED,eAAeD,mBAAf","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { DARK_THEME, LIGHT_THEME } from \"../styles/theme\";\nimport { ThemeProvider } from \"styled-components\";\nimport { useTheme } from \"../hooks/themeHooks\";\nimport { DEFAULT_THEME } from \"../constants/data\";\n\nfunction ThemeRecoilProvider({ children }) {\n    const { isDarkMode, changeMode } = useTheme()\n    const [monted, setMonted] = useState(false)\n\n    useEffect(() => {\n        const themeLocalID = localStorage.getItem('DARK_MODE')\n        console.log(\"themeLocalID: ==>\" , themeLocalID)\n        changeMode(themeLocalID === 'true')\n        setMonted(true)\n    }, [])\n\n    if(!monted){\n        return <div />\n    }\n    \n    return (\n        <ThemeProvider theme={themes[themeId]}>\n            { children}\n        </ThemeProvider>\n    )\n}\n\nexport default ThemeRecoilProvider"]},"metadata":{},"sourceType":"module"}