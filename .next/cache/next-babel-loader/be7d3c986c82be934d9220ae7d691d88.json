{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kellvembarobsa/projetos/zapaudios/site/contexts/theme.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { themes } from \"../styles/theme\";\nimport { ThemeProvider } from \"styled-components\";\nimport { useTheme } from \"../hooks/theme\";\nimport { DEFAULT_THEME } from \"../constants/data\";\n\nfunction ThemeRecoilProvider({\n  children\n}) {\n  const {\n    themeId,\n    changeTheme\n  } = useTheme();\n  const {\n    0: monted,\n    1: setMonted\n  } = useState(false);\n  useEffect(() => {\n    const themeLocalID = localStorage.getItem('DARK_MODE');\n    console.log(\"themeLocalID: ==>\", themeLocalID);\n    changeTheme(themeLocalID ? parseInt(themeLocalID) : DEFAULT_THEME);\n    setMonted(true);\n  }, []);\n\n  if (!monted) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: themes[themeId],\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\nexport default ThemeRecoilProvider;","map":{"version":3,"sources":["/Users/kellvembarobsa/projetos/zapaudios/site/contexts/theme.tsx"],"names":["React","useEffect","useState","themes","ThemeProvider","useTheme","DEFAULT_THEME","ThemeRecoilProvider","children","themeId","changeTheme","monted","setMonted","themeLocalID","localStorage","getItem","console","log","parseInt"],"mappings":";;AAAA,OAAOA,KAAP,IAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,aAAT,QAA8B,mBAA9B;;AAEA,SAASC,mBAAT,CAA6B;AAAEC,EAAAA;AAAF,CAA7B,EAA2C;AACvC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAA2BL,QAAQ,EAAzC;AACA,QAAM;AAAA,OAACM,MAAD;AAAA,OAASC;AAAT,MAAsBV,QAAQ,CAAC,KAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMY,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAArB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAkCJ,YAAlC;AAEAH,IAAAA,WAAW,CAACG,YAAY,GAAGK,QAAQ,CAACL,YAAD,CAAX,GAA4BP,aAAzC,CAAX;AACAM,IAAAA,SAAS,CAAC,IAAD,CAAT;AACH,GANQ,EAMN,EANM,CAAT;;AAQA,MAAG,CAACD,MAAJ,EAAW;AACP,wBAAO;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBACI,QAAC,aAAD;AAAe,IAAA,KAAK,EAAER,MAAM,CAACM,OAAD,CAA5B;AAAA,cACMD;AADN;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;AAED,eAAeD,mBAAf","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { themes } from \"../styles/theme\";\nimport { ThemeProvider } from \"styled-components\";\nimport { useTheme } from \"../hooks/theme\";\nimport { DEFAULT_THEME } from \"../constants/data\";\n\nfunction ThemeRecoilProvider({ children }) {\n    const { themeId, changeTheme } = useTheme()\n    const [monted, setMonted] = useState(false)\n\n    useEffect(() => {\n        const themeLocalID = localStorage.getItem('DARK_MODE')\n        console.log(\"themeLocalID: ==>\" , themeLocalID)\n        \n        changeTheme(themeLocalID ? parseInt(themeLocalID) : DEFAULT_THEME )\n        setMonted(true)\n    }, [])\n\n    if(!monted){\n        return <div />\n    }\n    \n    return (\n        <ThemeProvider theme={themes[themeId]}>\n            { children}\n        </ThemeProvider>\n    )\n}\n\nexport default ThemeRecoilProvider"]},"metadata":{},"sourceType":"module"}