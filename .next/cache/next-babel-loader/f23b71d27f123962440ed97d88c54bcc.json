{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kellvembarobsa/projetos/zapaudios/site/components/WaveForm.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\nimport { AiFillDislike, AiFillLike } from \"react-icons/ai\";\nimport { FaCommentDots } from \"react-icons/fa\";\nimport styled, { ThemeContext } from 'styled-components';\nimport WaveSurfer from \"wavesurfer.js\";\nimport { ButtonComment, ButtonDesLike, ButtonLike, ButtonPlay } from \"./Button\";\n\nconst formWaveSurferOptions = ref => ({\n  container: ref,\n  waveColor: \"#eee\",\n  progressColor: \"OrangeRed\",\n  cursorColor: \"OrangeRed\",\n  barWidth: 3,\n  barRadius: 3,\n  responsive: true,\n  height: 150,\n  // If true, normalize by the maximum peak instead of 1.0.\n  normalize: true,\n  // Use the PeakCache to improve rendering speed of large waveforms.\n  partialRender: true\n});\n\nexport default function Waveform({\n  url\n}) {\n  const waveformRef = useRef(null);\n  const wavesurfer = useRef(null);\n  const {\n    0: playing,\n    1: setPlay\n  } = useState(false);\n  const {\n    0: volume,\n    1: setVolume\n  } = useState(0.5);\n  const theme = useContext(ThemeContext); // create new WaveSurfer instance\n  // On component mount and when url changes\n\n  useEffect(() => {\n    setPlay(false);\n    const options = formWaveSurferOptions(waveformRef.current);\n    wavesurfer.current = WaveSurfer.create(_objectSpread(_objectSpread({}, options), {}, {\n      barWidth: 3,\n      cursorWidth: 1,\n      container: '#waveform',\n      backend: 'WebAudio',\n      height: 80,\n      progressColor: '#2D5BFF',\n      responsive: true,\n      waveColor: '#EFEFEF',\n      cursorColor: 'transparent'\n    }));\n    wavesurfer.current.load(url);\n    wavesurfer.current.on(\"ready\", function () {\n      // https://wavesurfer-js.org/docs/methods.html\n      // wavesurfer.current.play();\n      // setPlay(true);\n      // make sure object stillavailable when file loaded\n      if (wavesurfer.current) {\n        wavesurfer.current.setVolume(volume);\n        setVolume(volume);\n      }\n    }); // Removes events, elements and disconnects Web Audio nodes.\n    // when component unmount\n\n    return () => wavesurfer.current.destroy();\n  }, [url]);\n\n  const handlePlayPause = () => {\n    setPlay(!playing);\n    wavesurfer.current.playPause();\n  };\n\n  const onVolumeChange = e => {\n    const {\n      target\n    } = e;\n    const newVolume = +target.value;\n\n    if (newVolume) {\n      setVolume(newVolume);\n      wavesurfer.current.setVolume(newVolume || 1);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"waveform\",\n      ref: waveformRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: /*#__PURE__*/_jsxDEV(ContainerActions, {\n        children: [/*#__PURE__*/_jsxDEV(ButtonPlay, {\n          onClick: handlePlayPause,\n          children: !playing ? \"Play\" : \"Pause\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ButtonLike, {\n          children: /*#__PURE__*/_jsxDEV(AiFillLike, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ButtonDesLike, {\n          children: /*#__PURE__*/_jsxDEV(AiFillDislike, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ButtonComment, {\n          children: /*#__PURE__*/_jsxDEV(FaCommentDots, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\nconst ContainerActions = styled.div.withConfig({\n  displayName: \"WaveForm__ContainerActions\",\n  componentId: \"sc-1ri6x28-0\"\n})([\"flex:1;height:60px;display:flex;align-items:center;margin:16px 0px;\"]);","map":{"version":3,"sources":["/Users/kellvembarobsa/projetos/zapaudios/site/components/WaveForm.tsx"],"names":["React","useContext","useEffect","useRef","useState","AiFillDislike","AiFillLike","FaCommentDots","styled","ThemeContext","WaveSurfer","ButtonComment","ButtonDesLike","ButtonLike","ButtonPlay","formWaveSurferOptions","ref","container","waveColor","progressColor","cursorColor","barWidth","barRadius","responsive","height","normalize","partialRender","Waveform","url","waveformRef","wavesurfer","playing","setPlay","volume","setVolume","theme","options","current","create","cursorWidth","backend","load","on","destroy","handlePlayPause","playPause","onVolumeChange","e","target","newVolume","value","ContainerActions","div"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useRef, useState } from \"react\";\nimport { AiFillDislike, AiFillLike } from \"react-icons/ai\";\nimport { FaCommentDots } from \"react-icons/fa\";\nimport styled, { ThemeContext } from 'styled-components';\nimport WaveSurfer from \"wavesurfer.js\";\nimport TimelinePlugin from 'wavesurfer.js/dist/plugin/wavesurfer.timeline.min.js';\nimport MinimapPlugin from 'wavesurfer.js/dist/plugin/wavesurfer.minimap.min.js';\nimport { Button, ButtonComment, ButtonDesLike, ButtonLike, ButtonPlay, ButtonPrimary } from \"./Button\";\n\nconst formWaveSurferOptions = ref => ({\n    container: ref,\n    waveColor: \"#eee\",\n    progressColor: \"OrangeRed\",\n    cursorColor: \"OrangeRed\",\n    barWidth: 3,\n    barRadius: 3,\n    responsive: true,\n    height: 150,\n    // If true, normalize by the maximum peak instead of 1.0.\n    normalize: true,\n    // Use the PeakCache to improve rendering speed of large waveforms.\n    partialRender: true\n});\n\nexport default function Waveform({ url }) {\n    const waveformRef = useRef(null);\n    const wavesurfer = useRef(null);\n    const [playing, setPlay] = useState(false);\n    const [volume, setVolume] = useState(0.5);\n    const theme = useContext(ThemeContext);\n\n    // create new WaveSurfer instance\n    // On component mount and when url changes\n    useEffect(() => {\n        setPlay(false);\n\n        const options = formWaveSurferOptions(waveformRef.current);\n        wavesurfer.current = WaveSurfer.create({...options, \n            barWidth: 3,\n            cursorWidth: 1,\n            container: '#waveform',\n            backend: 'WebAudio',\n            height: 80,\n            progressColor: '#2D5BFF',\n            responsive: true,\n            waveColor: '#EFEFEF',\n            cursorColor: 'transparent',\n           });\n\n        wavesurfer.current.load(url);\n\n        wavesurfer.current.on(\"ready\", function () {\n            // https://wavesurfer-js.org/docs/methods.html\n            // wavesurfer.current.play();\n            // setPlay(true);\n\n            // make sure object stillavailable when file loaded\n            if (wavesurfer.current) {\n                wavesurfer.current.setVolume(volume);\n                setVolume(volume);\n            }\n        });\n\n        // Removes events, elements and disconnects Web Audio nodes.\n        // when component unmount\n        return () => wavesurfer.current.destroy();\n    }, [url]);\n\n    const handlePlayPause = () => {\n        setPlay(!playing);\n        wavesurfer.current.playPause();\n    };\n\n    const onVolumeChange = e => {\n        const { target } = e;\n        const newVolume = +target.value;\n\n        if (newVolume) {\n            setVolume(newVolume);\n            wavesurfer.current.setVolume(newVolume || 1);\n        }\n    };\n\n    return (\n        <div>\n            <div id=\"waveform\" ref={waveformRef} />\n            <div className=\"controls\">\n\n                <ContainerActions>\n                    <ButtonPlay onClick={handlePlayPause}>{!playing ? \"Play\" : \"Pause\"}</ButtonPlay>\n                    <ButtonLike>\n                        <AiFillLike />\n                    </ButtonLike>\n\n                    <ButtonDesLike>\n                        <AiFillDislike />\n                    </ButtonDesLike>\n\n                    <ButtonComment>\n                        <FaCommentDots />\n                    </ButtonComment>\n\n                </ContainerActions>\n            </div>\n        </div>\n    );\n}\n\nconst ContainerActions = styled.div`\n  flex: 1;\n  height: 60px;\n  display: flex;\n  align-items: center;\n  margin: 16px 0px;\n`;\n"]},"metadata":{},"sourceType":"module"}