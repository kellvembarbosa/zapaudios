{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useEffect, useState } from \"react\";\nimport { DARK_THEME, LIGHT_THEME } from \"../styles/theme\";\nimport { ThemeProvider } from \"styled-components\";\nimport { useRecoilState } from \"recoil\";\nimport { themeState } from \"../recoils/atoms\";\n\nfunction ThemeRecoilProvider(_ref) {\n  var children = _ref.children;\n\n  var _useRecoilState = useRecoilState(themeState),\n      _useRecoilState2 = _slicedToArray(_useRecoilState, 2),\n      isDarkMode = _useRecoilState2[0],\n      setDarkMode = _useRecoilState2[1];\n\n  var _useState = useState(false),\n      monted = _useState[0],\n      setMonted = _useState[1];\n\n  useEffect(function () {\n    var themeLocalID = localStorage.getItem('DARK_MODE');\n    setDarkMode(themeLocalID === 'true');\n    setMonted(true);\n  }, []);\n\n  if (!monted) {\n    return /*#__PURE__*/_jsx(\"div\", {});\n  }\n\n  return /*#__PURE__*/_jsx(ThemeProvider, {\n    theme: isDarkMode ? DARK_THEME : LIGHT_THEME,\n    children: children\n  });\n}\n\nexport default ThemeRecoilProvider;","map":null,"metadata":{},"sourceType":"module"}