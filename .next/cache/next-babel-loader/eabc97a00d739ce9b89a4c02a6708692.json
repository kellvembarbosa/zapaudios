{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kellvembarobsa/projetos/zapaudios/site/contexts/theme.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { DARK_THEME, LIGHT_THEME } from \"../styles/theme\";\nimport { ThemeProvider } from \"styled-components\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { themeState } from \"../recoils/atoms\";\nimport { changeMode } from \"../recoils/selectors\";\n\nfunction ThemeRecoilProvider({\n  children\n}) {\n  const isDarkMode = useRecoilValue(themeState);\n  const darkMode = useSetRecoilState(changeMode);\n  const {\n    0: monted,\n    1: setMonted\n  } = useState(false);\n  useEffect(() => {\n    const themeLocalID = localStorage.getItem('DARK_MODE');\n    console.log(\"themeLocalID: ==>\", themeLocalID + ' ' + darkMode);\n    darkMode(themeLocalID === 'true');\n    setMonted(true);\n  }, []);\n\n  if (!monted) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: isDarkMode ? DARK_THEME : LIGHT_THEME,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\nexport default ThemeRecoilProvider;","map":{"version":3,"sources":["/Users/kellvembarobsa/projetos/zapaudios/site/contexts/theme.tsx"],"names":["React","useEffect","useState","DARK_THEME","LIGHT_THEME","ThemeProvider","useRecoilValue","useSetRecoilState","themeState","changeMode","ThemeRecoilProvider","children","isDarkMode","darkMode","monted","setMonted","themeLocalID","localStorage","getItem","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,iBAAxC;AACA,SAASC,aAAT,QAA8B,mBAA9B;AAEA,SAAyBC,cAAzB,EAAyCC,iBAAzC,QAAkE,QAAlE;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,UAAT,QAA2B,sBAA3B;;AAEA,SAASC,mBAAT,CAA6B;AAAEC,EAAAA;AAAF,CAA7B,EAA2C;AACvC,QAAMC,UAAU,GAAGN,cAAc,CAACE,UAAD,CAAjC;AACA,QAAMK,QAAQ,GAAGN,iBAAiB,CAACE,UAAD,CAAlC;AACA,QAAM;AAAA,OAACK,MAAD;AAAA,OAASC;AAAT,MAAsBb,QAAQ,CAAC,KAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMe,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAArB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAkCJ,YAAY,GAAG,GAAf,GAAqBH,QAAvD;AACAA,IAAAA,QAAQ,CAACG,YAAY,KAAK,MAAlB,CAAR;AACAD,IAAAA,SAAS,CAAC,IAAD,CAAT;AACH,GALQ,EAKN,EALM,CAAT;;AAOA,MAAG,CAACD,MAAJ,EAAW;AACP,wBAAO;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBACI,QAAC,aAAD;AAAe,IAAA,KAAK,EAAEF,UAAU,GAAGT,UAAH,GAAgBC,WAAhD;AAAA,cACMO;AADN;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;AAED,eAAeD,mBAAf","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { DARK_THEME, LIGHT_THEME } from \"../styles/theme\";\nimport { ThemeProvider } from \"styled-components\";\nimport { DEFAULT_THEME } from \"../constants/data\";\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { themeState } from \"../recoils/atoms\";\nimport { changeMode } from \"../recoils/selectors\";\n\nfunction ThemeRecoilProvider({ children }) {\n    const isDarkMode = useRecoilValue(themeState)\n    const darkMode = useSetRecoilState(changeMode); \n    const [monted, setMonted] = useState(false)\n\n    useEffect(() => {\n        const themeLocalID = localStorage.getItem('DARK_MODE')\n        console.log(\"themeLocalID: ==>\" , themeLocalID + ' ' + darkMode)\n        darkMode(themeLocalID === 'true')\n        setMonted(true)\n    }, [])\n\n    if(!monted){\n        return <div />\n    }\n    \n    return (\n        <ThemeProvider theme={isDarkMode ? DARK_THEME : LIGHT_THEME }>\n            { children}\n        </ThemeProvider>\n    )\n}\n\nexport default ThemeRecoilProvider"]},"metadata":{},"sourceType":"module"}