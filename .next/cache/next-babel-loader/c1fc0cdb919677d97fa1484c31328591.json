{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kellvembarobsa/projetos/zapaudios/site/pages/audio/_waveform.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport WaveSurfer from \"wavesurfer.js\";\nimport { ButtonPrimary } from \"../../components/Button\";\n\nvar formWaveSurferOptions = function formWaveSurferOptions(ref) {\n  return {\n    container: ref,\n    waveColor: \"#eee\",\n    progressColor: \"OrangeRed\",\n    cursorColor: \"OrangeRed\",\n    barWidth: 3,\n    barRadius: 3,\n    responsive: true,\n    height: 150,\n    // If true, normalize by the maximum peak instead of 1.0.\n    normalize: true,\n    // Use the PeakCache to improve rendering speed of large waveforms.\n    partialRender: true\n  };\n};\n\nexport default function Waveform(_ref) {\n  _s();\n\n  var url = _ref.url;\n  var waveformRef = useRef(null);\n  var wavesurfer = useRef(null);\n\n  var _useState = useState(false),\n      playing = _useState[0],\n      setPlay = _useState[1];\n\n  var _useState2 = useState(0.5),\n      volume = _useState2[0],\n      setVolume = _useState2[1]; // create new WaveSurfer instance\n  // On component mount and when url changes\n\n\n  useEffect(function () {\n    setPlay(false);\n    var options = formWaveSurferOptions(waveformRef.current);\n    wavesurfer.current = WaveSurfer.create(options);\n    wavesurfer.current.load(url);\n    wavesurfer.current.on(\"ready\", function () {\n      // https://wavesurfer-js.org/docs/methods.html\n      // wavesurfer.current.play();\n      // setPlay(true);\n      // make sure object stillavailable when file loaded\n      if (wavesurfer.current) {\n        wavesurfer.current.setVolume(volume);\n        setVolume(volume);\n      }\n    }); // Removes events, elements and disconnects Web Audio nodes.\n    // when component unmount\n\n    return function () {\n      return wavesurfer.current.destroy();\n    };\n  }, [url]);\n\n  var handlePlayPause = function handlePlayPause() {\n    setPlay(!playing);\n    wavesurfer.current.playPause();\n  };\n\n  var onVolumeChange = function onVolumeChange(e) {\n    var target = e.target;\n    var newVolume = +target.value;\n\n    if (newVolume) {\n      setVolume(newVolume);\n      wavesurfer.current.setVolume(newVolume || 1);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"waveform\",\n      ref: waveformRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(ButtonPrimary, {\n        onClick: handlePlayPause,\n        children: !playing ? \"Play\" : \"Pause\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"volume\",\n        children: \"Volume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Waveform, \"E6jEnK//CZI1i70eZ2lF4RdAmvU=\");\n\n_c = Waveform;\n\nvar _c;\n\n$RefreshReg$(_c, \"Waveform\");","map":{"version":3,"sources":["/Users/kellvembarobsa/projetos/zapaudios/site/pages/audio/_waveform.tsx"],"names":["React","useEffect","useRef","useState","WaveSurfer","ButtonPrimary","formWaveSurferOptions","ref","container","waveColor","progressColor","cursorColor","barWidth","barRadius","responsive","height","normalize","partialRender","Waveform","url","waveformRef","wavesurfer","playing","setPlay","volume","setVolume","options","current","create","load","on","destroy","handlePlayPause","playPause","onVolumeChange","e","target","newVolume","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\n\nimport WaveSurfer from \"wavesurfer.js\";\nimport { Button, ButtonPrimary } from \"../../components/Button\";\n\nconst formWaveSurferOptions = ref => ({\n  container: ref,\n  waveColor: \"#eee\",\n  progressColor: \"OrangeRed\",\n  cursorColor: \"OrangeRed\",\n  barWidth: 3,\n  barRadius: 3,\n  responsive: true,\n  height: 150,\n  // If true, normalize by the maximum peak instead of 1.0.\n  normalize: true,\n  // Use the PeakCache to improve rendering speed of large waveforms.\n  partialRender: true\n});\n\nexport default function Waveform({ url }) {\n  const waveformRef = useRef(null);\n  const wavesurfer = useRef(null);\n  const [playing, setPlay] = useState(false);\n  const [volume, setVolume] = useState(0.5);\n\n  // create new WaveSurfer instance\n  // On component mount and when url changes\n  useEffect(() => {\n    setPlay(false);\n\n    const options = formWaveSurferOptions(waveformRef.current);\n    wavesurfer.current = WaveSurfer.create(options);\n\n    wavesurfer.current.load(url);\n\n    wavesurfer.current.on(\"ready\", function() {\n      // https://wavesurfer-js.org/docs/methods.html\n      // wavesurfer.current.play();\n      // setPlay(true);\n\n      // make sure object stillavailable when file loaded\n      if (wavesurfer.current) {\n        wavesurfer.current.setVolume(volume);\n        setVolume(volume);\n      }\n    });\n\n    // Removes events, elements and disconnects Web Audio nodes.\n    // when component unmount\n    return () => wavesurfer.current.destroy();\n  }, [url]);\n\n  const handlePlayPause = () => {\n    setPlay(!playing);\n    wavesurfer.current.playPause();\n  };\n\n  const onVolumeChange = e => {\n    const { target } = e;\n    const newVolume = +target.value;\n\n    if (newVolume) {\n      setVolume(newVolume);\n      wavesurfer.current.setVolume(newVolume || 1);\n    }\n  };\n\n  return (\n    <div>\n      <div id=\"waveform\" ref={waveformRef} />\n      <div className=\"controls\">\n        <ButtonPrimary onClick={handlePlayPause}>{!playing ? \"Play\" : \"Pause\"}</ButtonPrimary>\n        {/* <input\n          type=\"range\"\n          id=\"volume\"\n          name=\"volume\"\n          // waveSurfer recognize value of `0` same as `1`\n          //  so we need to set some zero-ish value for silence\n          min=\"0.01\"\n          max=\"1\"\n          step=\".025\"\n          onChange={onVolumeChange}\n          defaultValue={volume}\n        /> */}\n        <label htmlFor=\"volume\">Volume</label>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}